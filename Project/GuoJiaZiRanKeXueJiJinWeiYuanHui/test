1、线程池问题：
同一批处理完，才会进行另一批

2、redis获取任务时间无记录
需要增加记录净时间（结束时间-开始时间，ms）
考虑在每个线程里单独取自己任务

3、run函数关于删除mysql种子部分代码：关于下载主键（mysql）、业务主键(分析出的sha)的区别:
   1）链接跳转
   2）业务主键不是用下载链接生成
   3）修改方案：task任务里，增加mysql主键

4、建议每层单独打出错日志，目的解决错误跟踪问题

5、task结构：
   data = {
                'sha': sha,
                'ctx': ctx,
                'url': url,
                'es': es,
                'ws': ws,
                'date_created': timeutils.getNowDatetime()
            }
   task: ctx

6、关于redis取种子问题：
   1) redis取种子数量放到配置文件中
   2）不能等到0在取种子，需要设定比例，例如：50%，小于该比例，就开始补种子；
   3）队列redis任务（QueueTask函数需要打印执行时间ms)，因为有redis锁，会影响redis中补种子的绝对数量
   4）getNewTaskList函数打印时间（从mysql获取种子），建议mysql对应表中加联合索引（ws、es、del）
   5）redis主键和锁按项目区分，并通过配置文件设置；

7、需要计时的函数：
   saveDataToHbase
   saveTaskToMysql
   __getResp
   saveMediaToHbase
   ...

8、增加计时功能（计时、计次）

9、新方案设计瓶颈：
   1）设计：单机80个并发
   2）可能瓶颈：
      内存：80并发*10MB=800MB，原文件+转码成base64，需要俩倍内存1.6GB
      外网带宽：40KB/s*80=3.2MB=32Mb
      内网带宽：1.4MB*80=112MB=1000Mb
      时间占比算法（理论值）：
        文件大小（KB）：X
        下载时间(X/40) / 上传时间（X*(4/3)/1400）
            =
   3）当前线上系统状况（核数、内存、带宽）

10、上传和下载分开：
    看下载时间有效占比，如果在95%以上，不用考虑；如果在90%以下，可以考虑；

11、查看一个线程内所有消耗时间占比